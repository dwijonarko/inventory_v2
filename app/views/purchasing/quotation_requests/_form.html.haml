- semantic_form_for [:purchasing, @quotation_request] do |f|
  = f.error_messages
  - f.inputs 'Quotation Request', :class => "form_section" do
    = f.input :number
    = f.input :suppliers, :input_html => { :class => "multiselect" }
    = f.input :request_date, :as => :string, :input_html => { :class => "datepicker" }
    = f.input :description, :input_html => { :rows => 2, :cols => 50 }
  - f.inputs 'Items', :class => "form_section" do
    %li
      %table.report
        %thead
          %tr
            %th.td_5= check_box_tag 'check_all', 1, nil, :id => "check_master"
            %th Item
            %th Qty
            %th
        %tfoot
          %tr
            %td &nbsp;
            %td{ :colspan => 3 } &nbsp;
        %tbody
          - f.semantic_fields_for :entries do |ent|
            %tr
              %td.tdc.td_5= ent.check_box :_destroy, :class => "check_slave"
              %td.item
                = ent.text_field :item_name, :class => "item_autocomplete", :size => 58
                = ent.hidden_field :item_id
              %td.tdr.td_5= ent.text_field :quantity, :size => 5, :class => "numbers mr_qty"
              %td.tdr
                - if ent.object.note.blank?
                  = link_to image_tag('icons/silk/comment.png'), '#', :class => "popup_handle"
                - else
                  = link_to image_tag('icons/silk/comment_filled.png'), '#', :class => "popup_handle"
                %p.popup_note.should_hidden= ent.text_field :note, :class => "pop_input default"
                = link_to image_tag('icons/silk/cross.png'), '#', :class => "row_remover"
  %fieldset.buttons
    %button{ :type => "submit" }
      = image_tag 'icons/silk/disk.png'
      Save Quotation Request

- content_for :javascripts do
  - javascript_tag do
    var insert_fields = true;
    var template = $('tbody tr:last-child').html();
    var regexp1 = new RegExp("\\[(\\d+)\\]", "g");
    var regexp2 = new RegExp("_(\\d+)_", "g");
    var new_id = $('tbody tr').length;
