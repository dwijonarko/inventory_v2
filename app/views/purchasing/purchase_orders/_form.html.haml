- semantic_form_for [:purchasing, @purchase_order] do |f|
  = f.error_messages
  - f.inputs "Purchase Order", :class => "form_section" do
    %li.string
      = f.label :number, "Number", :class => "required"
      .inline
        - if @purchase_order.new_record?
          = f.text_field :number
        - else
          %span.uneditable= @purchase_order.number 
      .inline{ :style => "min-width:190px;" }
        = f.label :po_date, "PO Date", :style => "width:60px;", :class => "required"
        = f.text_field :po_date, :class => "datepicker"
    = f.input :supplier, :include_blank => "Select supplier", :required => true, :input_html => { :class => "select"}
    = f.input :material_requests, :collection => @material_requests, :input_html => { :class => "multiselect" }
    = f.input :attention
    = f.input :term_of_payment, :input_html => { :rows => 2 }
    = f.input :notes, :input_html => { :rows => 2 }, :label => "Remark"
  - f.inputs 'Items', :class => "form_section" do
    %li
      %table.report
        %thead
          %tr
            %th.td_5= check_box_tag 'check_all', 1, nil, :id => "check_master"
            %th{ :style => "width:63%;" } Item
            %th{ :style => "width:8%;" } Qty
            %th{ :style => "width:10%;" } @ Price
            %th{ :style => "width:8%;" } Disc. (%)
            %th
        %tfoot
          %tr
            %td &nbsp;
            %td{ :colspan => 5 } &nbsp;
        %tbody
          - f.semantic_fields_for :entries do |ent|
            %tr
              %td.tdc.td_5= ent.check_box :_destroy, :class => "check_slave"
              %td{ :colspan => 5 }
                %ul
                  %li
                    = ent.text_field :item_name, :class => "item_autocomplete", :style => "width:66% !important"
                    = ent.hidden_field :item_id
                    = ent.text_field :quantity, :class => "numbers mr_qty", :style => "width:7%"
                    = ent.text_field :purchase_price, :class => "numbers", :style => "width:10%"
                    = ent.text_field :discount, :class => "numbers", :style => "width:7%"
                    = link_to image_tag('icons/silk/cross.png'), '#', :class => "row_remover"
                  - unless ent.object.trackers.blank?
                    - ent.semantic_fields_for :trackers do |trc|
                      %li.trackers
                        = "<span class='light' style='width:66%; display:inline-block; padding:3px;'>Quantity taken from <strong>#{trc.object.material_request.number}</strong></span> "
                        = trc.text_field :quantity, :class => "numbers tracker_quantity", :style => "width:7%"
                        = trc.hidden_field :material_request_id
                        = trc.hidden_field :item_id
                        = trc.hidden_field :_destroy
                        = link_to "remove", '#', :class => "tracker_remover"
  %fieldset.buttons
    %button#primary-button{ :type => "submit" }
      = image_tag 'icons/silk/disk.png'
      Save Purchase Order

- content_for :javascripts do
  - javascript_tag do
    var insert_fields = true;
    var suppliers = [];
    - ActiveRecord::Base.include_root_in_json = false
    - for supplier in @suppliers
      = "suppliers[#{supplier.id}] = #{supplier.to_json(:only => [:id, :name], :methods => [:address])};"
    :plain
      var template = $('tbody tr:last-child').html();
      var regexp1 = new RegExp("\\[(\\d+)\\]", "g");
      var regexp2 = new RegExp("_(\\d+)_", "g");
      var new_id = $('tbody tr').length;
      $(function() {
        $('.ui-multiselect-menu')
        .after('<span id="supplier_address" style="margin-left:10px;"></span>')
        var selected_supplier = $('#purchase_order_supplier_id').multiselect('getChecked');
        if(selected_supplier.length) {
          $('#supplier_address').html(suppliers[selected_supplier[0].value].address);
        }
        $('#purchase_order_supplier_id')
        .bind('multiselectclick', function(event, ui) {
          if(typeof(suppliers[ui.value]) != 'undefined') {
            $('#supplier_address').html(suppliers[ui.value].address);
            $(this).multiselect('close');
          }
        });
        $('.multiselect').bind('multiselectclose', function(event, ui) {
          var mrs = $(this).multiselect('getChecked');
          var form = $(this).parents('form');
          form.append('<input type="hidden" name="get_mrs" value="1"/>');
          $.ajax({
            url: form[0].action,
            type: 'post',
            data: form.serialize(),
            success: function(response, status) {
              var entries = $(response).find('tbody');
              form.find('tbody').html(entries.html());
              $('input[name=get_mrs]').remove();
            }
          });
          return false;
        });
      });
